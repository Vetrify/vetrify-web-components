{
	"$schema": "http://json-schema.org/schema#",
	"$id": "http://www.vetrify.com/business-strategy-0.0.1",
	"version": "0.0.1",
	"title": "Vetrify Business Strategy",
	"description": "Definition for business strategy in the Vetrify application",
	"properties": {
		"recipes": { "type": "array", "items": { "$ref": "#/$defs/recipe" } },
		"terms": { "type": "array", "items": { "$ref": "#/$defs/term" } },
		"relationships": { "type": "array", "items": { "$ref": "#/$defs/relationshipGroup"} },
		"personas": { "type" : "array", "items":{ "$ref": "#/$defs/persona" } },
		"reasons": { "type": "array", "items": { "$ref": "#/$defs/purpose" } },
		"failureModes":{ "type": "array", "items": { "$ref": "#/$defs/failureMode"} },
		"effectLabels":{ "type": "array", "items": {"$ref": "#/$defs/rangeLabel" } },
		"viewState": { "$ref": "#/$defs/viewState" }
	},
	"$defs": {
		"viewState":{
			"type": "object", 
			"properties": {
				"readOnly": { "type":"boolean"},
				"hidden": { "type":"boolean"},
			    "status": { "type": "string", "enum":["dirty", "new", "deleted"]},
			    "availableActions": { "type": "array", "items":{ "type": "string"}},
			    "requestedActions": { "type": "array", "items":{ "type": "string"}}
			}
		},
		"term": {
			"type": "object",
			"properties": {
				"name": { "type": "string" },
				"definition": { "type": "string" },
				"weight":{ "type": "number" },
				"viewState": { "$ref": "#/$defs/viewState" }
			},
			"required": ["name"]
		},
		"persona": {
			"type": "object",
			"properties": {
				"$id": { "type": "string", "maxLength": 64, "format" : "uuid" },
				"name": { "type": "string" },
				"brief": { "type": "string" },
				"thumbnail": {"type": "string", "format": "uri" },
				"initials": {"type": "string", "minLength": 2, "maxLength": 3},
				"viewState": { "$ref": "#/$defs/viewState" }
			},
			"required": ["$id", "name", "brief"]
		},
		"recipe": {
			"type": "object",
			"properties": {
				"$id": { "type": "string", "maxLength": 64, "format" : "uuid" },
				"associatedVerb":{ "type": "string" },
				"name": { "type": "string" },
				"description":{ "type": "string" },
				"promise": { "type": "string" },
				"steps": { "type": "array", "items": { "$ref": "#/$defs/recipeStep" } },
				"stepRelationships": { "type": "array", "items": { "$ref": "#/$defs/relationship" } },
				"viewState": { "$ref": "#/$defs/viewState" }
			},
			"required":["$id", "name", "promise"]
		},
		"recipeStep": {
			"type": "object",
			"properties": {
				"$id": { "type": "string", "maxLength": 64, "format" : "uuid" },
				"verb": { "type": "string" },
				"subject": { "type": "string" },
				"importance": {"type": "number"},
				"ordinal":{ "type":"number"},
				"substeps": { "type": "array", "items": { "$ref": "#/$defs/recipeStep" } },
				"substepRelationships": { "type": "array", "items": { "$ref": "#/$defs/relationship" } },
				"viewState": { "$ref": "#/$defs/viewState" }
			},
			"required": ["$id", "verb", "subject", "ordinal"],
			"additionalProperties": false
		},
		"failureMode":{
			"type":"object",
			"properties":{
				"$id": { "type": "string", "maxLength": 64, "format" : "uuid" },
				"name":{"type":"string"},
				"detail":{"type":"string"},
				"probability":{"type":"number"},
				"impact":{"type":"number"},
				"viewState": { "$ref": "#/$defs/viewState" }
			},
			"required": ["$id", "name", "probability", "impact"]
		},
		"purpose": {
			"type": "object",
			"properties": {
				"$id": { "type": "string", "maxLength": 64, "format" : "uuid" },	
				"direction": { "type": "string", "enum": ["increase", "decrease", "maximize", "minimize"] },
				"subject": { "type": "string" },
				"target": { "type": "string" },
				"viewState": { "$ref": "#/$defs/viewState" }
			},
			"required": ["$id", "direction", "subject", "target"],
			"additionalProperties": false
		},
		"relationshipGroup":{
			"type":"object",
			"properties":{
				"name":{"type": "string"},
				"detail":{"type": "string"},
				"sourceType": {
					"type": "string",
					"enum": [ "step", "objective", "failure mode", "effect category", "persona" ]
				},
				"destinationType": {
					"type": "string",
					"enum": [ "step", "objective", "failureMode", "effect category", "persona" ]
				},
				"labels": {
					"description": "the label to be shown with various types of relationship weights",
					"type": "array", "items": { "$ref": "#/$defs/rangeLabel" }
				},
				"values": {
					"type": "array", "items": { "$ref": "#/$defs/relationship" }
				},
				"viewState": { "$ref": "#/$defs/viewState" }
			},
			"required":["name", "sourceType", "destinationType"]
		},
		"rangeLabel": {
			"type": "object",
			"description": "a label for a range of numeric values.  min is inclusive, max is exclusive.",
			"properties": {
				"label": { "type": "string" },
				"description": {"type": "string"},
				"iconName": { "type": "string" },
				"defaultValue": { "type": "number" },
				"minValue": { "type": "number" },
				"maxValue": { "type": "number" },
				"viewState": { "$ref": "#/$defs/viewState" }
			},
			"required":["label", "defaultValue"]
		},
		"relationship": {
			"type": "object",
			"properties": {
				"$id": { "type": "string", "maxLength": 64, "format" : "uuid" },
				"type":{ "type": "string"},
				"constraintType": { "type": "string", "enum": [ "FS", "SS", "SF" ] },
				"weight": { "type": "number" },
				"sourceId": { "type": "string", "maxLength": 64, "format" : "uuid" },
				"destinationId": { "type": "string" },
				"name": { "type": "string" },
				"viewState": { "$ref": "#/$defs/viewState" }
			},
			"required": ["$id", "type", "sourceId", "destinationId"],
			"additionalProperties": false
			
		}
	}
}